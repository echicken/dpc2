on:
  push:
    branches:
      - master

name: Create latest release from master

jobs:
  build:
    name: "Create Release: Latest"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: "^1.15.8"
      - run: |
          bash ./scripts/build.sh
          cp ./configs/doorparty-connector.ini ./build/linux_x64/
          cp ./configs/doorparty-connector.ini ./build/linux_arm6/
          cp ./configs/doorparty-connector.ini ./build/win32/
          (cd ./build/linux_x64; tar cvzf ../doorparty-connector-linux-x64.tgz doorparty-connector doorparty-connector.ini)
          (cd ./build/linux_arm6; tar cvzf ../doorparty-connector-linux-arm.tgz doorparty-connector doorparty-connector.ini)
          (cd ./build/win32; zip -9 ../doorparty-connector-win32.zip ./*)
      - name: Remove Previous Release
        uses: dev-drprasad/delete-tag-and-release@v0.1.3
        with:
          delete_release: true
          tag_name: latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: latest
          release_name: Latest
          body: |
            This is the latest version from master.
          draft: false
          prerelease: false
      - name: Upload Win32 Release Asset
        id: upload-release-asset-win32
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/doorparty-connector-win32.zip
          asset_name: doorparty-connector-win32.zip
          asset_content_type: application/octet-stream
      - name: Upload Linux (x64) Release Asset
        id: upload-release-asset-linux-x64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/doorparty-connector-linux-x64.tgz
          asset_name: doorparty-connector-linux-x64.tgz
          asset_content_type: application/octet-stream
      - name: Upload Linux (arm6) Release Asset
        id: upload-release-asset-linux-arm6
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/doorparty-connector-linux-arm.tgz
          asset_name: doorparty-connector-linux-arm.tgz
          asset_content_type: application/octet-stream
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Docker Build and Push to DockerHub
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
          context: .
          file: ./scripts/Dockerfile
          push: true
          tags: bbsio/doorparty:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
